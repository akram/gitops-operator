apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "argoproj.io/v1alpha1",
          "kind": "AppProject",
          "metadata": {
            "name": "example"
          },
          "spec": null
        },
        {
          "apiVersion": "argoproj.io/v1alpha1",
          "kind": "Application",
          "metadata": {
            "name": "example"
          },
          "spec": null
        },
        {
          "apiVersion": "argoproj.io/v1alpha1",
          "kind": "ApplicationSet",
          "metadata": {
            "name": "example"
          },
          "spec": null
        },
        {
          "apiVersion": "argoproj.io/v1alpha1",
          "kind": "ArgoCD",
          "metadata": {
            "name": "argocd"
          },
          "spec": {
            "controller": {
              "resources": {
                "limits": {
                  "cpu": "2000m",
                  "memory": "2048Mi"
                },
                "requests": {
                  "cpu": "250m",
                  "memory": "1024Mi"
                }
              }
            },
            "ha": {
              "enabled": false,
              "resources": {
                "limits": {
                  "cpu": "500m",
                  "memory": "256Mi"
                },
                "requests": {
                  "cpu": "250m",
                  "memory": "128Mi"
                }
              }
            },
            "rbac": {
              "defaultPolicy": "",
              "policy": "g, system:cluster-admins, role:admin\n",
              "scopes": "[groups]"
            },
            "redis": {
              "resources": {
                "limits": {
                  "cpu": "500m",
                  "memory": "256Mi"
                },
                "requests": {
                  "cpu": "250m",
                  "memory": "128Mi"
                }
              }
            },
            "repo": {
              "resources": {
                "limits": {
                  "cpu": "1000m",
                  "memory": "1024Mi"
                },
                "requests": {
                  "cpu": "250m",
                  "memory": "256Mi"
                }
              }
            },
            "resourceExclusions": "- apiGroups:\n  - tekton.dev\n  clusters:\n  - '*'\n  kinds:\n  - TaskRun\n  - PipelineRun        \n",
            "server": {
              "resources": {
                "limits": {
                  "cpu": "500m",
                  "memory": "256Mi"
                },
                "requests": {
                  "cpu": "125m",
                  "memory": "128Mi"
                }
              },
              "route": {
                "enabled": true
              }
            },
            "sso": {
              "dex": {
                "openShiftOAuth": true,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "provider": "dex"
            }
          }
        },
        {
          "apiVersion": "pipelines.openshift.io/v1alpha1",
          "kind": "GitopsService",
          "metadata": {
            "name": "gitopsservice-sample"
          },
          "spec": null
        }
      ]
    capabilities: Deep Insights
    console.openshift.io/plugins: '["gitops-plugin"]'
    containerImage: quay.io/redhat-developer/gitops-operator
    description: Enables teams to adopt GitOps principles for managing cluster configurations
      and application delivery across hybrid multi-cluster Kubernetes environments.
    operators.openshift.io/infrastructure-features: '["disconnected"]'
    operators.operatorframework.io/builder: operator-sdk-v1.22.0-ocp
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
    repository: https://github.com/redhat-developer/gitops-operator
    support: Red Hat
  name: gitops-operator.v0.0.3
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: An Application is a group of Kubernetes resources as defined by
        a manifest.
      displayName: Application
      kind: Application
      name: applications.argoproj.io
      version: v1alpha1
    - description: ApplicationSet is the representation of an ApplicationSet controller
        deployment.
      kind: ApplicationSet
      name: applicationsets.argoproj.io
      version: v1alpha1
    - description: An AppProject is a logical grouping of Argo CD Applications.
      displayName: AppProject
      kind: AppProject
      name: appprojects.argoproj.io
      version: v1alpha1
    - description: Argo CD is the representation of an Argo CD deployment.
      displayName: Argo CD
      kind: ArgoCD
      name: argocds.argoproj.io
      resources:
      - kind: ArgoCD
        name: ""
        version: v1alpha1
      - kind: ConfigMap
        name: ""
        version: v1
      - kind: CronJob
        name: ""
        version: v1
      - kind: Deployment
        name: ""
        version: v1
      - kind: Ingress
        name: ""
        version: v1
      - kind: Job
        name: ""
        version: v1
      - kind: PersistentVolumeClaim
        name: ""
        version: v1
      - kind: Pod
        name: ""
        version: v1
      - kind: Prometheus
        name: ""
        version: v1
      - kind: ReplicaSet
        name: ""
        version: v1
      - kind: Route
        name: ""
        version: v1
      - kind: Secret
        name: ""
        version: v1
      - kind: Service
        name: ""
        version: v1
      - kind: ServiceMonitor
        name: ""
        version: v1
      - kind: StatefulSet
        name: ""
        version: v1
      version: v1alpha1
    - description: GitopsService is the Schema for the gitopsservices API
      displayName: Gitops Service
      kind: GitopsService
      name: gitopsservices.pipelines.openshift.io
      version: v1alpha1
  description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
    based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt
    GitOps principles for managing cluster configurations and automating secure and
    repeatable application delivery across hybrid multi-cluster Kubernetes environments.
    Following GitOps and infrastructure as code principles, you can store the configuration
    of clusters and applications in Git repositories and use Git workflows to roll
    them out to the target clusters.\n\n## Features\n* Automated install and upgrades
    of Argo CD\n* Manual and automated configuration sync from Git repositories to
    target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
    templating tools\n* Configuration drift detection and visualization on live clusters\n*
    Audit trails of rollouts to the clusters\n* Monitoring and logging integration
    with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with
    [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
    Components\n* Argo CD 2.0.0\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
    How to Install \nAfter installing the OpenShift GitOps operator, an instance  of
    Argo CD is installed in the `openshift-gitops` namespace which has sufficent privileges
    for managing cluster configurations. You can create additional Argo CD instances
    using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
    argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
    \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
    on top of OpenShift that enables teams to adopt GitOps principles for managing
    cluster configurations and automating secure and repeatable application delivery
    across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
    around Argo CD as the core upstream project and assists customers to establish
    an end-to-end application delivery workflow on GitOps principles.\n"
  displayName: Red Hat OpenShift GitOps
  icon:
  - base64data: PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48c3ZnIGlkPSJhIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAzOCAzOCI+PGRlZnM+PHN0eWxlPi5ie2ZpbGw6I2UwMDt9LmN7ZmlsbDojZmZmO308L3N0eWxlPjwvZGVmcz48Zz48cGF0aCBjbGFzcz0iYyIgZD0iTTI4LDM3YzQuOTcsMCw5LTQuMDMsOS05VjEwYzAtNC45Ny00LjAzLTktOS05SDEwQzUuMDMsMSwxLDUuMDMsMSwxMFYyOGMwLDQuOTcsNC4wMyw5LDksOUgyOFoiLz48cGF0aCBkPSJNMjgsMi4yNWM0LjI3LDAsNy43NSwzLjQ4LDcuNzUsNy43NVYyOGMwLDQuMjctMy40OCw3Ljc1LTcuNzUsNy43NUgxMGMtNC4yNywwLTcuNzUtMy40OC03Ljc1LTcuNzVWMTBjMC00LjI3LDMuNDgtNy43NSw3Ljc1LTcuNzVIMjhtMC0xLjI1SDEwQzUuMDMsMSwxLDUuMDMsMSwxMFYyOGMwLDQuOTcsNC4wMyw5LDksOUgyOGM0Ljk3LDAsOS00LjAzLDktOVYxMGMwLTQuOTctNC4wMy05LTktOWgwWiIvPjwvZz48Zz48cGF0aCBkPSJNMjEsMjAuMjFjLS4wOCwwLS4xNy0uMDItLjI1LS4wNS0uNC0uMTctLjc4LS40LTEuMTMtLjY2LS4yOC0uMjEtLjMzLS42LS4xMi0uODgsLjIxLS4yOCwuNi0uMzMsLjg4LS4xMiwuMjcsLjIsLjU2LC4zOCwuODcsLjUxLC4zMiwuMTQsLjQ2LC41MSwuMzIsLjgyLS4xLC4yMy0uMzMsLjM3LS41NywuMzdaIi8+PHBhdGggZD0iTTE2LDI1LjYyYy0uMTksMC0uMzgtLjA5LS41LS4yNS0uMjEtLjI4LS4xNS0uNjcsLjEyLS44OCwxLjExLS44NCwxLjc1LTIuMTEsMS43NS0zLjV2LTZjMC0zLjEsMi41Mi01LjYyLDUuNjItNS42MnM1LjYyLDIuNTIsNS42Miw1LjYyYzAsLjM4LS4wNCwuNzYtLjExLDEuMTItLjA3LC4zNC0uNCwuNTYtLjc0LC40OS0uMzQtLjA3LS41Ni0uNC0uNDktLjc0LC4wNi0uMjksLjA5LS41OCwuMDktLjg4LDAtMi40MS0xLjk2LTQuMzgtNC4zOC00LjM4cy00LjM4LDEuOTYtNC4zOCw0LjM4djZjMCwxLjc5LS44MiwzLjQzLTIuMjUsNC41LS4xMSwuMDgtLjI0LC4xMy0uMzgsLjEzWiIvPjxwYXRoIGQ9Ik0xMywyNi42MmMtMy4xLDAtNS42Mi0yLjUyLTUuNjItNS42MnMyLjUyLTUuNjIsNS42Mi01LjYyYzEuMjMsMCwyLjQsLjM5LDMuMzgsMS4xMywuMjgsLjIxLC4zMywuNiwuMTIsLjg4LS4yMSwuMjgtLjYsLjMzLS44OCwuMTItLjc2LS41Ny0xLjY3LS44Ny0yLjYyLS44Ny0yLjQxLDAtNC4zOCwxLjk2LTQuMzgsNC4zOHMxLjk2LDQuMzgsNC4zOCw0LjM4Yy4zLDAsLjU5LS4wMywuODgtLjA5LC4zNC0uMDcsLjY3LC4xNSwuNzQsLjQ5LC4wNywuMzQtLjE1LC42Ny0uNDksLjc0LS4zNywuMDctLjc1LC4xMS0xLjEyLC4xMVoiLz48L2c+PHBhdGggY2xhc3M9ImIiIGQ9Ik0yMywyMy42MmMtLjM0LDAtLjYyLS4yOC0uNjItLjYydi03YzAtLjM1LC4yOC0uNjIsLjYyLS42MnMuNjIsLjI4LC42MiwuNjJ2N2MwLC4zNS0uMjgsLjYyLS42MiwuNjJaIi8+PHBhdGggY2xhc3M9ImIiIGQ9Ik0yNywxOS42MmMtLjE2LDAtLjMyLS4wNi0uNDQtLjE4bC00LTRjLS4yNC0uMjQtLjI0LS42NCwwLS44OCwuMjQtLjI0LC42NC0uMjQsLjg4LDBsNCw0Yy4yNCwuMjQsLjI0LC42NCwwLC44OC0uMTIsLjEyLS4yOCwuMTgtLjQ0LC4xOFoiLz48Zz48Y2lyY2xlIGNsYXNzPSJjIiBjeD0iMjMiIGN5PSIyNSIgcj0iMiIvPjxwYXRoIGNsYXNzPSJiIiBkPSJNMjMsMjcuNjJjLTEuNDUsMC0yLjYyLTEuMTgtMi42Mi0yLjYyczEuMTgtMi42MiwyLjYyLTIuNjIsMi42MiwxLjE4LDIuNjIsMi42Mi0xLjE4LDIuNjItMi42MiwyLjYyWm0wLTRjLS43NiwwLTEuMzgsLjYyLTEuMzgsMS4zOHMuNjIsMS4zOCwxLjM4LDEuMzgsMS4zOC0uNjIsMS4zOC0xLjM4LS42Mi0xLjM4LTEuMzgtMS4zOFoiLz48L2c+PGc+PGNpcmNsZSBjbGFzcz0iYyIgY3g9IjIzIiBjeT0iMTUiIHI9IjIiLz48cGF0aCBjbGFzcz0iYiIgZD0iTTIzLDE3LjYyYy0xLjQ1LDAtMi42Mi0xLjE4LTIuNjItMi42MnMxLjE4LTIuNjIsMi42Mi0yLjYyLDIuNjIsMS4xOCwyLjYyLDIuNjItMS4xOCwyLjYyLTIuNjIsMi42MlptMC00Yy0uNzYsMC0xLjM4LC42Mi0xLjM4LDEuMzhzLjYyLDEuMzgsMS4zOCwxLjM4LDEuMzgtLjYyLDEuMzgtMS4zOC0uNjItMS4zOC0xLjM4LTEuMzhaIi8+PC9nPjxnPjxjaXJjbGUgY2xhc3M9ImMiIGN4PSIyOCIgY3k9IjIwIiByPSIyIi8+PHBhdGggY2xhc3M9ImIiIGQ9Ik0yOCwyMi42MmMtMS40NSwwLTIuNjItMS4xOC0yLjYyLTIuNjJzMS4xOC0yLjYyLDIuNjItMi42MiwyLjYyLDEuMTgsMi42MiwyLjYyLTEuMTgsMi42Mi0yLjYyLDIuNjJabTAtNGMtLjc2LDAtMS4zOCwuNjItMS4zOCwxLjM4cy42MiwxLjM4LDEuMzgsMS4zOCwxLjM4LS42MiwxLjM4LTEuMzgtLjYyLTEuMzgtMS4zOC0xLjM4WiIvPjwvZz48cGF0aCBkPSJNMTIuMDMsMjguNTJjLS4xNiwwLS4zMi0uMDYtLjQ0LS4xOC0uMjQtLjI0LS4yNC0uNjQsMC0uODhsMS41Ni0xLjU2LTEuNTYtMS41NmMtLjI0LS4yNC0uMjQtLjY0LDAtLjg4cy42NC0uMjQsLjg4LDBsMiwyYy4yNCwuMjQsLjI0LC42NCwwLC44OGwtMiwyYy0uMTIsLjEyLS4yOCwuMTgtLjQ0LC4xOFoiLz48L3N2Zz4
    mediatype: image/svg+xml
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          - endpoints
          - events
          - persistentvolumeclaims
          - pods
          - secrets
          - serviceaccounts
          - services
          - services/finalizers
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - namespaces
          - resourcequotas
          verbs:
          - create
          - delete
          - get
          - list
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - pods/log
          verbs:
          - get
        - apiGroups:
          - apps
          resources:
          - daemonsets
          - deployments
          - replicasets
          - statefulsets
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - apps
          resourceNames:
          - gitops-operator
          resources:
          - deployments/finalizers
          verbs:
          - update
        - apiGroups:
          - apps.openshift.io
          resources:
          - '*'
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - argoproj.io
          resources:
          - applications
          - appprojects
          - argocds
          - argocds/finalizers
          - argocds/status
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - autoscaling
          resources:
          - horizontalpodautoscalers
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - batch
          resources:
          - cronjobs
          - jobs
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - config.openshift.io
          resources:
          - clusterversions
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - console.openshift.io
          resources:
          - consoleclidownloads
          verbs:
          - create
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - console.openshift.io
          resources:
          - consolelinks
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - console.openshift.io
          resources:
          - consoleplugins
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - monitoring.coreos.com
          resources:
          - prometheuses
          - prometheusrules
          - servicemonitors
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - networking.k8s.io
          resources:
          - ingresses
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - oauth.openshift.io
          resources:
          - oauthclients
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - operators.coreos.com
          resources:
          - clusterserviceversions
          - operatorgroups
          - subscriptions
          verbs:
          - create
          - get
          - list
          - watch
        - apiGroups:
          - pipelines.openshift.io
          resources:
          - '*'
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - pipelines.openshift.io
          resources:
          - gitopsservices
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - pipelines.openshift.io
          resources:
          - gitopsservices/finalizers
          verbs:
          - update
        - apiGroups:
          - pipelines.openshift.io
          resources:
          - gitopsservices/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - '*'
          verbs:
          - bind
          - create
          - delete
          - deletecollection
          - escalate
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterrolebindings
          - clusterroles
          verbs:
          - bind
          - create
          - delete
          - deletecollection
          - escalate
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - route.openshift.io
          resources:
          - '*'
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - route.openshift.io
          resources:
          - routes
          - routes/custom-host
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - template.openshift.io
          resources:
          - templateconfigs
          - templateinstances
          - templates
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: gitops-operator-controller-manager
      deployments:
      - label:
          control-plane: argocd-operator
        name: gitops-operator-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: argocd-operator
          strategy: {}
          template:
            metadata:
              labels:
                control-plane: argocd-operator
            spec:
              containers:
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=10
                image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                resources: {}
              - args:
                - --health-probe-bind-address=:8081
                - --metrics-bind-address=127.0.0.1:8080
                - --leader-elect
                command:
                - /manager
                env:
                - name: ARGOCD_CLUSTER_CONFIG_NAMESPACES
                  value: openshift-gitops
                - name: OPERATOR_NAME
                  value: gitops-operator
                - name: DISABLE_DEX
                  value: "false"
                image: quay.io/redhat-developer/gitops-operator:latest
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources: {}
                securityContext:
                  allowPrivilegeEscalation: false
              securityContext:
                runAsNonRoot: true
              serviceAccountName: gitops-operator-controller-manager
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: gitops-operator-controller-manager
    strategy: deployment
  installModes:
  - supported: false
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - devtools
  - gitops
  - pipelines
  links:
  - name: Day 1 Operations
    url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
  - name: Day 2 Operations
    url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
  maintainers:
  - email: shbose@redhat.com
    name: shoubhik
  maturity: alpha
  provider:
    name: Red Hat Inc
  replaces: gitops-operator.v0.0.2
  version: 0.0.3
